using System.Text;
using Microsoft.AspNetCore.Authentication.JwtBearer;
using Microsoft.AspNetCore.Builder;
using Microsoft.EntityFrameworkCore;
using Microsoft.IdentityModel.Tokens;
using userstrctureapi.Data;
using userstrctureapi.Services;

var builder = WebApplication.CreateBuilder(args);

// üìå ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤ Connection String ‡∏à‡∏≤‡∏Å appsettings.json
var connectionString = builder.Configuration.GetConnectionString("DefaultConnection");

// üìå ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô DbContext ‡πÉ‡∏´‡πâ‡πÉ‡∏ä‡πâ MySQL
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseMySql(connectionString, new MySqlServerVersion(new Version(8, 0, 21))));

// üìå ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô AuthService
builder.Services.AddScoped<AuthService>();

// üìå ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô Authentication ‡πÅ‡∏•‡∏∞ JWT Bearer Token
builder.Services.AddAuthentication(JwtBearerDefaults.AuthenticationScheme)
    .AddJwtBearer(options =>
    {
        options.TokenValidationParameters = new TokenValidationParameters
        {
            ValidateIssuerSigningKey = true,
            IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes("aaa")), // ‡∏£‡∏´‡∏±‡∏™‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ã‡πá‡∏ô JWT
            ValidateIssuer = false,
            ValidateAudience = false
        };
    });

// üìå ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Controllers
builder.Services.AddControllers();

builder.Services.AddEndpointsApiExplorer(); // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ endpoints
builder.Services.AddSwaggerGen();


// üìå ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô CORS (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô)
// builder.Services.AddCors(policy =>
//     policy.AllowAnyOrigin()
//           .AllowAnyMethod()
//           .AllowAnyHeader()
// );

// üìå ‡πÉ‡∏ä‡πâ Authentication ‡πÅ‡∏•‡∏∞ Authorization
var app = builder.Build();

if (app.Environment.IsDevelopment()) // ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô Development
{
    app.UseSwagger(); // ‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Swagger
    app.UseSwaggerUI(c =>
    {
        c.SwaggerEndpoint("/swagger/v1/swagger.json", "API v1"); // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î endpoint ‡∏Ç‡∏≠‡∏á Swagger
        c.RoutePrefix = string.Empty; // ‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î Swagger UI ‡∏ó‡∏µ‡πà root path (http://localhost:5000)
    });
}
app.UseCors(); // ‡πÉ‡∏ä‡πâ CORS ‡∏ó‡∏µ‡πà‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡πÑ‡∏ß‡πâ
app.UseAuthentication(); // ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö JWT
app.UseAuthorization(); // ‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á API

app.MapControllers();

app.Run();
